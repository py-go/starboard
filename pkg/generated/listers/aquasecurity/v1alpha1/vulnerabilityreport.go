// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/danielpacak/kube-security-manager/pkg/apis/aquasecurity/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VulnerabilityReportLister helps list VulnerabilityReports.
// All objects returned here must be treated as read-only.
type VulnerabilityReportLister interface {
	// List lists all VulnerabilityReports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VulnerabilityReport, err error)
	// VulnerabilityReports returns an object that can list and get VulnerabilityReports.
	VulnerabilityReports(namespace string) VulnerabilityReportNamespaceLister
	VulnerabilityReportListerExpansion
}

// vulnerabilityReportLister implements the VulnerabilityReportLister interface.
type vulnerabilityReportLister struct {
	indexer cache.Indexer
}

// NewVulnerabilityReportLister returns a new VulnerabilityReportLister.
func NewVulnerabilityReportLister(indexer cache.Indexer) VulnerabilityReportLister {
	return &vulnerabilityReportLister{indexer: indexer}
}

// List lists all VulnerabilityReports in the indexer.
func (s *vulnerabilityReportLister) List(selector labels.Selector) (ret []*v1alpha1.VulnerabilityReport, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VulnerabilityReport))
	})
	return ret, err
}

// VulnerabilityReports returns an object that can list and get VulnerabilityReports.
func (s *vulnerabilityReportLister) VulnerabilityReports(namespace string) VulnerabilityReportNamespaceLister {
	return vulnerabilityReportNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VulnerabilityReportNamespaceLister helps list and get VulnerabilityReports.
// All objects returned here must be treated as read-only.
type VulnerabilityReportNamespaceLister interface {
	// List lists all VulnerabilityReports in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.VulnerabilityReport, err error)
	// Get retrieves the VulnerabilityReport from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.VulnerabilityReport, error)
	VulnerabilityReportNamespaceListerExpansion
}

// vulnerabilityReportNamespaceLister implements the VulnerabilityReportNamespaceLister
// interface.
type vulnerabilityReportNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VulnerabilityReports in the indexer for a given namespace.
func (s vulnerabilityReportNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VulnerabilityReport, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VulnerabilityReport))
	})
	return ret, err
}

// Get retrieves the VulnerabilityReport from the indexer for a given namespace and name.
func (s vulnerabilityReportNamespaceLister) Get(name string) (*v1alpha1.VulnerabilityReport, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vulnerabilityreport"), name)
	}
	return obj.(*v1alpha1.VulnerabilityReport), nil
}
